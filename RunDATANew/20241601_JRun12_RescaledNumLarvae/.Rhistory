# Add the plot to the grid
grid[[i, j]] <- current_plot
i = i + 1
}
i = 1  # Reset i for each condition
j = j + 1
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
i = 1
j = 1
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
i = 1
j = 1
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(!is.na(mapping$lou[mapping$rp == rep & mapping$condition == cond]))) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()
}
# Add the plot to the grid
grid[[i, j]] <- current_plot
i = i + 1
}
i = 1  # Reset i for each condition
j = j + 1
}
mapping$lou[mapping$rp == rep & mapping$condition == cond]
!is.na(mapping$lou[mapping$rp == rep & mapping$condition == cond])
mapping
mapping$lou[mapping$rp == rep & mapping$condition == cond]
any(mapping$lou[mapping$rp == rep & mapping$condition == cond]) == 1
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
i = 1
j = 1
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()
}
# Add the plot to the grid
grid[[i, j]] <- current_plot
i = i + 1
}
i = 1  # Reset i for each condition
j = j + 1
}
any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()
}
# Add the plot to the grid
grid[[i, j]] <- current_plot
i = i + 1
}
i = 1  # Reset i for each condition
j = j + 1
}
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
i = 1
j = 1
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()
}
# Add the plot to the grid
grid[[i, j]] <- current_plot
i = i + 1
}
i = 1  # Reset i for each condition
j = j + 1
}
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
i = 1
j = 1
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
i = 1
j = 1
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()
}
# Add the plot to the grid
grid[[j, i]] <- current_plot
i = i + 1
}
i = 1  # Reset i for each condition
j = j + 1
}
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:3)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
View(grid)
grid["1"]
grid["1","lb_lf"]
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:3)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()
}
# Add the plot to the grid
grid[rep, cond] <- current_plot
}
}
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[rep]]
}
else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
rep
cond
plots_react$lb_lf
plots_react[[cond]]
plots_react[[cond]]$rep
rep
plots_react[[cond]][["1"]]
plots_react[[cond]]["3"]
plots_react[[cond]][rep]
plots_react[[cond]][as.character(rep)]
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][as.character(rep)]
}
else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
grid["1","lb_lf"]
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
}
else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
ggsave("EvolvedReactionNorms.png", final_grid_plot, height = 15, width = 15, units = "in", dpi = 300)
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
cond <- conditions_to_compare[1]
cond
rep = 2
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
}
else {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
}
else {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
}
any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
}
else {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
ggsave("EvolvedReactionNorms.png", final_grid_plot, height = 15, width = 15, units = "in", dpi = 300)
cond = conditions_to_compare
cond = conditions_to_compare[1]
rep
rep = 2
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
current_plot
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
# Add the plot to the grid
grid[rep, cond] <- current_plot
}
}
list(current_plot)
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
current_plot <- NULL
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot()  # You may want to replace this with a default plot or handle it differently
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
ggsave("EvolvedReactionNorms.png", final_grid_plot, height = 15, width = 15, units = "in", dpi = 300)
ggplot(data_plotting, aes(x=larval_level, y=logistic_vals, group=V3)) +
stat_summary(aes(x=larval_level, y=logistic_vals, group=V3), fun=mean, geom="line", linewidth=1.5, alpha=0.8, col = "grey") +
scale_y_continuous(name="Foraging probability", limits = c(0.0, 1.0), breaks = seq(0.0, 1.0, 0.2)) +
scale_x_continuous(name="Larval levels", limits = c(0.0, 500.0), breaks = seq(0.0,500.0,50.0)) +
theme_minimal() +
theme(
axis.text = element_text(size=11,face="plain",color="black"),
axis.title = element_text(size = 13),
axis.line = element_line(color="black", linewidth = 0.6),
panel.border = element_rect(colour = "darkgray", fill=NA, linetype=0.5)
)
ggplot() +
scale_y_continuous(name="Foraging probability", limits = c(0.0, 1.0), breaks = seq(0.0, 1.0, 0.2)) +
scale_x_continuous(name="Larval levels", limits = c(0.0, 500.0), breaks = seq(0.0,500.0,50.0)) +
theme_minimal() +
theme(
axis.text = element_text(size=11,face="plain",color="black"),
axis.title = element_text(size = 13),
axis.line = element_line(color="black", linewidth = 0.6),
panel.border = element_rect(colour = "darkgray", fill=NA, linetype=0.5)
)
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
current_plot <- NULL
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot() +
scale_y_continuous(name="Foraging probability", limits = c(0.0, 1.0), breaks = seq(0.0, 1.0, 0.2)) +
scale_x_continuous(name="Larval levels", limits = c(0.0, 500.0), breaks = seq(0.0,500.0,50.0)) +
theme_minimal() +
theme(
axis.text = element_text(size=11,face="plain",color="black"),
axis.title = element_text(size = 13),
axis.line = element_line(color="black", linewidth = 0.6),
panel.border = element_rect(colour = "darkgray", fill=NA, linetype=0.5)
)
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
ggsave("EvolvedReactionNorms.png", final_grid_plot, height = 15, width = 15, units = "in", dpi = 300)
##### Reaction norms #####
# Number of rows and columns in the grid
num_rows <- num_replicates
num_cols <- length(conditions_to_compare)
# Create an empty list to store plots
plots_list <- vector("list", length = num_rows * num_cols)
# Create a predefined grid
grid <- matrix(plots_list, nrow = num_rows, ncol = num_cols)
rownames(grid) <- seq(1:num_replicates)
colnames(grid) <- conditions_to_compare
mapping$condition[is.na(mapping$condition)] <- "nodata"
# Double for loop to add plots to the grid
for (cond in conditions_to_compare) {
for (rep in 1:num_replicates) {
current_plot <- NULL
if (any(mapping$lou[mapping$rp == rep & mapping$condition == cond] == 1)) {
# Create your individual plot (replace this with your own plot creation code)
current_plot <- plots_react[[cond]][[as.character(rep)]]
} else {
current_plot <- ggplot() +
theme_minimal() +
theme(axis.title = element_text(size = 13),
axis.line = element_line(color="black", linewidth = 0.6),
panel.border = element_rect(colour = "darkgray", fill=NA, linetype=0.5)
)
}
# Add the plot to the grid
grid[rep, cond] <- list(current_plot)
}
}
# Arrange the grid using grid.arrange
final_grid_plot <- grid.arrange(grobs = grid, ncol = num_cols)
ggsave("EvolvedReactionNorms.png", final_grid_plot, height = 15, width = 15, units = "in", dpi = 300)
final_grid_plot <- final_grid_plot +
plot_annotation(title = "Evolved Reaction Norms")
# Add a title to the final_grid_plot using patchwork
final_grid_plot <- final_grid_plot +
plot_annotation(title = "Evolved Reaction Norms")
# Add a title to the final_grid_plot using patchwork
final_grid_plot <- final_grid_plot +
plot_annotation(title = "Evolved Reaction Norms")
??ggsave
